#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module DataSyndrome
    class EmailAddress
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ADDRESS = 1
      NAME = 2

      FIELDS = {
        ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Email
      include ::Thrift::Struct, ::Thrift::Struct_Union
      FROM = 1
      TO = 2
      CC = 3
      BCC = 4
      REPLY_TO = 5
      SUBJECT = 6
      DATE = 7
      MESSAGE_ID = 8
      BODY = 9

      FIELDS = {
        FROM => {:type => ::Thrift::Types::STRUCT, :name => 'from', :class => DataSyndrome::EmailAddress},
        TO => {:type => ::Thrift::Types::LIST, :name => 'to', :element => {:type => ::Thrift::Types::STRUCT, :class => DataSyndrome::EmailAddress}},
        CC => {:type => ::Thrift::Types::LIST, :name => 'cc', :element => {:type => ::Thrift::Types::STRUCT, :class => DataSyndrome::EmailAddress}},
        BCC => {:type => ::Thrift::Types::LIST, :name => 'bcc', :element => {:type => ::Thrift::Types::STRUCT, :class => DataSyndrome::EmailAddress}},
        REPLY_TO => {:type => ::Thrift::Types::STRING, :name => 'reply_to'},
        SUBJECT => {:type => ::Thrift::Types::STRING, :name => 'subject'},
        DATE => {:type => ::Thrift::Types::STRING, :name => 'date'},
        MESSAGE_ID => {:type => ::Thrift::Types::STRING, :name => 'message_id'},
        BODY => {:type => ::Thrift::Types::STRING, :name => 'body'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field from is unset!') unless @from
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
