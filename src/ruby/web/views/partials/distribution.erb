<h2><%= @email %></h2>
<div class="row">
  <div class="span4">
    <script type="text/javascript" src="/d3/d3.js"></script>
    <script type="text/javascript" src="/d3/d3.layout.js"></script>
    <style type="text/css">
      // .chart rect {
      //     stroke: white;
      //     fill: steelblue;
      //     //color: white;
      // }
    </style>
    <!-- Data table for raw email sent counts -->
    <table class="table table-striped table-bordered table-condensed">
      <thead>
        <tr>
          <th style="width: 100px">Hour</th>
          <th style="width: 100px">Emails Sent</th>
        </tr>
      </thead>
      <tbody>
      <% @data.each do |d| -%>
        <tr>
          <td><%= d['sent_hour'] %></td>
          <td><%= d['total'] %></td>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>

  <div id="d3div" class="span6" style="color: white;">

  </div>
  <div class="span6">
  <ul class="nav nav-pills">
    <% @friends[0..5].each do |d| -%>
    <li class="active">
      <a href="/sent_distributions/<%= d['to'] -%>"><%= d['to'] -%></a>
    </li>
    <% end -%>
  </ul>
  </div>
</div>



<script type="text/javascript">
var data = <%= @json -%>;
var w = 20, h = 465;

// Max is used to map our values to the Y axis
var max = d3.max(data, function(d) { return d['total']; });

// X range
var x = d3.scale.linear()
    .domain([0, 1])
    .range([0, w]);

// Y range, minus an offset
var y = d3.scale.linear()
    .domain([0, max])
    .rangeRound([0, h - 10]);

// Create the chart element
var chart = d3.select("div#d3div").append("svg")
    .attr("class", "chart")
    .attr("width", w * data.length - 1)
    .attr("height", h + 20);

// Draw the bars
chart.selectAll("rect")
    .data(data)
    .enter().append("rect")
    .attr("x", function(d, i) { return x(i) - .5; })
    .attr("y", function(d) { return h - y(d.total) - .5; })
    .attr("width", w)
    .attr("height", function(d) { return y(d.total); })
    .attr("stroke", "white")
    .attr("fill", function(d) { if(d.total == max) 
                                { 
                                  return "#4CA9F5" ; 
                                } 
                                else {
                                  return "steelblue";
                                }
                              });

// Labels for each bar - which hour it represents
chart.selectAll("hours")
    .data(data)
    .enter().append("text")
    .attr("x", function(d, i) { return x(i) + w/2 - 0.5; })
    .attr("y", h + 11)
    .attr("text-anchor", "middle")
    .text(function(d) { return d['sent_hour']; })
    .attr("fill", "#474747");

// Label our values
chart.selectAll("values")
    .data(data)
    .enter().append("text")
    .attr("x", function(d, i) { return x(i) + w/2 - 0; })
    .attr("y", function(d) { return h - y(d.total) - 2; })
    .text(function(d) { return d['total']; })
    .attr("text-anchor", "middle")
    .attr("fill", "black")
    .attr("font-size", "10px");
</script>
